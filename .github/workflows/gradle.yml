# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches:
      - 'main'

env:
  S3_BUCKET_NAME: morakmorak
  RESOURCE_PATH: ./server/morak_back_end/src/main/resources/application.yml
  CODE_DEPLOY_APPLICATION_NAME: morak
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: morak-group

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/checkout@v2
      - run: touch ./server/morak_back_end/src/main/resources/application.yml
      - run: echo "${{ secrets.APPLICATION_MAIN }}" > server/morak_back_end/src/main/resources/application.yml

      - uses: actions/upload-artifact@v2
        with:
          name: application.yml
          path: ./server/morak_back_end/src/main/resources/application.yml

      - name: Download chromedriver
        run: |
          wget -q -O tmp.zip https://chromedriver.storage.googleapis.com/81.0.4044.69/chromedriver_linux64.zip
          unzip tmp.zip && rm tmp.zip

      - name: Grant execute permission for gradlew
        run: chmod +x ./server/morak_back_end/gradlew
        shell: bash

        # [2] build
      - name: Build with Gradle
        run: cd server/morak_back_end; ./gradlew build
        shell: bash

        # [3] save build
      - name: Make zip file
        run: zip -r ./morak.zip .
        shell: bash

        # [4] aws 권한
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

        # [5] upload
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./morak.zip s3://$S3_BUCKET_NAME/morak.zip

        # [6] deploy
      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=morak.zip